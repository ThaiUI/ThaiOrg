---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

let { src, alt, classes } = Astro.props;

let local = src ? `/public${src}` : `/public/img/placeholder.webp`;
let remote = src ? src : `/public/img/placeholder.webp`;

// Glob pattern to load images from the /public/img folder
const images = import.meta.glob('/public/img/**/*.{jpeg,jpg,png,gif,webp}');

// Check if the source path is valid
const isValidPath = images[local] ? true : false;

// Log a warning message in red if the image is not found
!isValidPath &&
  console.error(
    `\x1b[31mImage not found - ${local}.\x1b[0m Make sure the image is in the /public/img folder.`
  );
---

<Picture
  src={src.includes('http')
    ? remote
    : (images[local]() as Promise<{ default: ImageMetadata }>)}
  formats={['avif', 'webp']}
  inferSize={true}
  class={classes}
  alt={alt}
/>
